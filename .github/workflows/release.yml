name: Release

on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'
      - '.gitignore'
      - '.github/**'
      - 'LICENSE'
      - '.vscode/**'

permissions:
  contents: write
  discussions: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
          - os: ubuntu-latest
            arch: aarch64
          - os: macos-13
            arch: x86_64
          - os: macos-latest
            arch: arm64

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        if: matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v3

      - name: Install dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y gcc ninja-build zlib1g-dev meson
          elif [ "$RUNNER_OS" == "macOS" ]; then
            brew update
            brew bundle --file=- <<EOF
            brew "gcc"
            brew "ninja"
            brew "zlib"
            brew "meson"
            EOF
          fi

      - name: Set SDKROOT on macOS
        if: runner.os == 'macOS'
        run: echo "SDKROOT=$(xcrun --show-sdk-path)" >> $GITHUB_ENV

      - name: Modify meson.build for macOS
        if: runner.os == 'macOS'
        run: |
          sed -i '' 's/warning_level=3/warning_level=0/' meson.build
          sed -i '' '/werror=true/d' meson.build

      - name: Build
        run: |
          if [ "${{ matrix.arch }}" == "aarch64" ]; then
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            docker run --rm -v $(pwd):/work -w /work arm64v8/ubuntu:latest /bin/bash -c "
              apt-get update && apt-get install -y gcc ninja-build zlib1g-dev meson
              meson setup builddir
              meson compile -C builddir
            "
          else
            meson setup builddir
            meson compile -C builddir
          fi

      - name: Rename binary
        run: |
          sudo mv builddir/pkgrip pkgrip-${{ runner.os }}-${{ matrix.arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pkgrip-${{ runner.os }}-${{ matrix.arch }}
          path: pkgrip-${{ runner.os }}-${{ matrix.arch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: pkgrip-build

      - name: Calculate SHA256 hashes
        id: sha256
        run: |
          SHA256_X86=$(sha256sum ./pkgrip-build/pkgrip-Linux-x86_64/pkgrip-Linux-x86_64 | awk '{print $1}')
          SHA256_AARCH64=$(sha256sum ./pkgrip-build/pkgrip-Linux-aarch64/pkgrip-Linux-aarch64 | awk '{print $1}')
          SHA256_MACOS_X64=$(sha256sum ./pkgrip-build/pkgrip-macOS-x86_64/pkgrip-macOS-x86_64 | awk '{print $1}')
          SHA256_MACOS_ARM64=$(sha256sum ./pkgrip-build/pkgrip-macOS-arm64/pkgrip-macOS-arm64 | awk '{print $1}')
          echo "sha256_x86=$SHA256_X86" >> $GITHUB_OUTPUT
          echo "sha256_aarch64=$SHA256_AARCH64" >> $GITHUB_OUTPUT
          echo "sha256_macos_x64=$SHA256_MACOS_X64" >> $GITHUB_OUTPUT
          echo "sha256_macos_arm64=$SHA256_MACOS_ARM64" >> $GITHUB_OUTPUT

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body: |
            Changelog:
              ${{ github.event.head_commit.message }}

            SHA256 Checksums:
              - Linux x86_64: `${{ steps.sha256.outputs.sha256_x86 }}`
              - Linux aarch64: `${{ steps.sha256.outputs.sha256_aarch64 }}`

              - macOS x86_64: `${{ steps.sha256.outputs.sha256_macos_x64 }}`
              - macOS arm64: `${{ steps.sha256.outputs.sha256_macos_arm64 }}`
          files: |
            ./pkgrip-build/pkgrip-Linux-x86_64/pkgrip-Linux-x86_64
            ./pkgrip-build/pkgrip-Linux-aarch64/pkgrip-Linux-aarch64
            ./pkgrip-build/pkgrip-macOS-x86_64/pkgrip-macOS-x86_64
            ./pkgrip-build/pkgrip-macOS-arm64/pkgrip-macOS-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
