name: Release

on:
  push:
    branches:
      - master

permissions:
  contents: write
  discussions: write

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            arch: x86_64
          - os: ubuntu-latest
            arch: aarch64
          - os: macos-13
            arch: x86_64
          - os: macos-latest
            arch: arm64

    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4

      - name: Set up QEMU
        if: matrix.arch == 'aarch64'
        uses: docker/setup-qemu-action@v3

      - name: Install dependencies
        run: |
          if [ "$RUNNER_OS" == "Linux" ]; then
            sudo apt-get update
            sudo apt-get install -y gcc python3 python3-pip ninja-build zlib1g-dev meson
          elif [ "$RUNNER_OS" == "macOS" ]; then
            if [ "${{ matrix.os }}" == "macos-13" ]; then
              brew update
              brew install gcc ninja zlib meson
              brew install python@3.12
              brew link --overwrite python@3.12
            else
              brew update
              brew install gcc python3 ninja zlib meson
            fi
          fi

      - name: Set SDKROOT on macOS
        if: runner.os == 'macOS'
        run: echo "SDKROOT=$(xcrun --show-sdk-path)" >> $GITHUB_ENV

      - name: Modify meson.build for macOS
        if: runner.os == 'macOS'
        run: |
          sed -i '' 's/warning_level=3/warning_level=0/' meson.build
          sed -i '' '/werror=true/d' meson.build

      - name: Build
        run: |
          if [ "${{ matrix.arch }}" == "aarch64" ]; then
            docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
            docker run --rm -v $(pwd):/work -w /work arm64v8/ubuntu:latest /bin/bash -c "
              apt-get update && apt-get install -y gcc python3 python3-pip ninja-build zlib1g-dev meson
              meson setup builddir
              meson compile -C builddir
            "
          else
            meson setup builddir
            meson compile -C builddir
          fi

      - name: Rename binary
        run: |
          sudo mv builddir/pkgrip pkgrip-${{ runner.os }}-${{ matrix.arch }}

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: pkgrip-${{ runner.os }}-${{ matrix.arch }}
          path: pkgrip-${{ runner.os }}-${{ matrix.arch }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          path: pkgrip-build

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ github.run_number }}
          name: Release v${{ github.run_number }}
          body: |
            Changelog:
              ${{ github.event.head_commit.message }}
          files: |
            ./pkgrip-build/pkgrip-Linux-x86_64/pkgrip-Linux-x86_64
            ./pkgrip-build/pkgrip-Linux-aarch64/pkgrip-Linux-aarch64
            ./pkgrip-build/pkgrip-macOS-x86_64/pkgrip-macOS-x86_64
            ./pkgrip-build/pkgrip-macOS-arm64/pkgrip-macOS-arm64
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
